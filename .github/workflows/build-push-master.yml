name: continuous-deploy

on:
  push:
    branches:
      - 'master'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BRANCH_NAME: ${{ github.ref_name }}
  COMMIT_SHA: ${{ github.sha }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        node-version: [21.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm ci
      - run: npm run lint
      - run: npm test
      - run: npm run start

      # ‚úÖ Setup QEMU f√ºr ARM Builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # ‚úÖ Setup Buildx f√ºr Multiarch
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ‚úÖ Login zum GHCR
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: package.json info
        id: meta
        uses: jaywcjlove/github-action-package@main

      - name: preparing variales to be lowercase
        run: echo "IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: üèóÔ∏è Build and push Docker image (Multiarch)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ env.BRANCH_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ steps.meta.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ env.COMMIT_SHA }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:latest

      # - name: Trigger Re-Deploy Stage
      #   env:
      #     SECRET_UPDATE_URL: ${{ secrets.UPDATE_URL }}
      #   uses: fjogeleit/http-request-action@v1
      #   with:
      #     url: "${{ env.SECRET_UPDATE_URL }}"
      #     method: 'GET'
      #   if: env.SECRET_UPDATE_URL != null
